"use client"

import React, { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { ArrowLeft, User, Phone, Award, Calendar, MapPin, Star, RefreshCw } from "lucide-react"
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from "@/components/ui/alert-dialog"

interface ProfileDetailProps {
  person: any
  onBack: () => void
}

// Helper function to format Thai short date
const toThaiShortDate = (input: string) => {
  if (!input) return ''
  try {
    const d = new Date(input)
    if (isNaN(d.getTime())) return input
    const day = d.getDate()
    const monthNames = ['‡∏°.‡∏Ñ.','‡∏Å.‡∏û.','‡∏°‡∏µ.‡∏Ñ.','‡πÄ‡∏°.‡∏¢.','‡∏û.‡∏Ñ.','‡∏°‡∏¥.‡∏¢.','‡∏Å.‡∏Ñ.','‡∏™.‡∏Ñ.','‡∏Å.‡∏¢.','‡∏ï.‡∏Ñ.','‡∏û.‡∏¢.','‡∏ò.‡∏Ñ.']
    const year = d.getFullYear() + 543
    const shortYear = String(year).slice(-2)
    const thaiNum = (n:number) => String(n).split('').map(ch => '‡πê‡πë‡πí‡πì‡πî‡πï‡πñ‡πó‡πò‡πô'[parseInt(ch)]).join('')
    return `${thaiNum(day)} ${monthNames[d.getMonth()]} ${thaiNum(parseInt(shortYear))}`
  } catch (e) { return input }
}

export function ProfileDetail({ person, onBack }: ProfileDetailProps) {
  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);

  if (!person) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 text-white p-6">
        <div className="max-w-3xl mx-auto text-center">
          <h2 className="text-2xl font-bold mb-4">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
          <Button onClick={onBack} className="bg-blue-600">‚Üê ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</Button>
        </div>
      </div>
    )
  }

  const fullName = `${(person.‡∏¢‡∏® || '').trim()} ${(person.‡∏ä‡∏∑‡πà‡∏≠ || '').trim()} ${(person.‡∏™‡∏Å‡∏∏‡∏• || '').trim()}`.replace(/\s+/g, ' ').trim()
  const displayName = (person.‡∏ä‡∏∑‡πà‡∏≠ && person.‡∏ä‡∏∑‡πà‡∏≠ !== "‡∏ô‡∏ô‡∏£.") ? fullName : "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á"
  const position = person['‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡∏ó‡∏Å‡∏ó.'] || person.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á || person['‡∏ó‡∏Å‡∏ó.'] || ''

  const fetchAvatar = async () => {
    if (person?.‡∏ä‡∏∑‡πà‡∏≠) {
      const cacheKey = `avatar_${person.‡∏ä‡∏∑‡πà‡∏≠}_${person.‡∏™‡∏Å‡∏∏‡∏•}`;
      const cachedUrl = localStorage.getItem(cacheKey);

      if (cachedUrl) {
        setAvatarUrl(cachedUrl);
        return;
      }

      try {
        const lastNameInitial = person.‡∏™‡∏Å‡∏∏‡∏• ? person.‡∏™‡∏Å‡∏∏‡∏•.charAt(0) : '';
        const searchName = `${person.‡∏ä‡∏∑‡πà‡∏≠} ${lastNameInitial}`.trim();

        const res = await fetch('/api/image-link', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ personName: searchName }),
        });
        const data = await res.json();

        if (data.success) {
          const proxyUrl = `/api/image-proxy?url=${encodeURIComponent(data.link)}`;
          setAvatarUrl(proxyUrl);
          localStorage.setItem(cacheKey, proxyUrl);
        }
      } catch (error) {
        console.error('Error fetching avatar:', error);
      }
    }
  };

  useEffect(() => {
    if (person?.‡∏ä‡∏∑‡πà‡∏≠) {
      const cacheKey = `avatar_${person.‡∏ä‡∏∑‡πà‡∏≠}_${person.‡∏™‡∏Å‡∏∏‡∏•}`;
      const cachedUrl = localStorage.getItem(cacheKey);

      if (cachedUrl) {
        setAvatarUrl(cachedUrl);
        return;
      }

      const fetchAvatar = async () => {
        try {
          const lastNameInitial = person.‡∏™‡∏Å‡∏∏‡∏• ? person.‡∏™‡∏Å‡∏∏‡∏•.charAt(0) : '';
          const searchName = `${person.‡∏ä‡∏∑‡πà‡∏≠} ${lastNameInitial}`.trim();

          const res = await fetch('/api/image-link', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ personName: searchName }),
          });
          const data = await res.json();

          if (data.success) {
            // Set the thumbnail first for a quick preview
            if (data.thumbnailLink) {
              setAvatarUrl(data.thumbnailLink);
            }

            // Then load the full image in the background
            const proxyUrl = `/api/image-proxy?url=${encodeURIComponent(data.link)}`;
            const img = new Image();
            img.src = proxyUrl;
            img.onload = () => {
              setAvatarUrl(proxyUrl);
              localStorage.setItem(cacheKey, proxyUrl);
            };
          }
        } catch (error) {
          console.error('Error fetching avatar:', error);
        }
      };
      fetchAvatar();
    }
  }, [person]);

  const handleDownload = () => {
    if (avatarUrl) {
      const link = document.createElement('a');
      link.href = avatarUrl;
      link.download = `${fullName}.png`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  };

  const handleRefresh = () => {
    if (person?.‡∏ä‡∏∑‡πà‡∏≠) {
      const cacheKey = `avatar_${person.‡∏ä‡∏∑‡πà‡∏≠}_${person.‡∏™‡∏Å‡∏∏‡∏•}`;
      localStorage.removeItem(cacheKey);
      setAvatarUrl(null);
      fetchAvatar();
    }
  };

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠ log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô terminal ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  useEffect(() => {
    try {
      const payload = {
        name: fullName,
        position,
        report: {
          to: person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô || null,
          partner: person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°'] || null,
          date: person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà || null,
        },
        enter433Dates: Array.isArray(person._433_dates) ? person._433_dates : [],
        adminChpDates: Array.isArray(person._admin_dates) ? person._admin_dates : [],
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        allPersonData: person,
        detected433Columns: person._433_columns || [],
        detectedAdminColumns: person._admin_columns || [],
        metadata: {
          total433Columns: person._433_columns?.length || 0,
          totalAdminColumns: person._admin_columns?.length || 0,
        }
      }
      
      // ‡πÅ‡∏™‡∏î‡∏á log ‡πÉ‡∏ô console ‡∏Ç‡∏≠‡∏á browser
      console.log('üîç Profile Detail - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:', {
        timestamp: new Date().toISOString(),
        personName: fullName,
        allData: person,
        summary: {
          basicInfo: {
            ‡∏•‡∏≥‡∏î‡∏±‡∏ö: person.‡∏•‡∏≥‡∏î‡∏±‡∏ö,
            ‡∏¢‡∏®: person.‡∏¢‡∏®,
            ‡∏ä‡∏∑‡πà‡∏≠: person.‡∏ä‡∏∑‡πà‡∏≠,
            ‡∏™‡∏Å‡∏∏‡∏•: person.‡∏™‡∏Å‡∏∏‡∏•,
            ‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà: person.‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà,
            ‡∏ï‡∏≠‡∏ô: person.‡∏ï‡∏≠‡∏ô,
            ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: person.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á,
            ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î: person.‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î,
            ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå: person.‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå,
            ‡∏Ñ‡∏±‡∏î‡πÄ‡∏Å‡∏£‡∏î: person.‡∏Ñ‡∏±‡∏î‡πÄ‡∏Å‡∏£‡∏î,
          },
          additionalInfo: {
            '‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏ù‡∏≠.': person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏ù‡∏≠.‡∞≤‡∞æ'],
            ‡∏ï‡∏±‡∏ß‡∏ä‡∏ô: person.‡∏ï‡∏±‡∏ß‡∏ä‡∏ô,
            ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á: person.‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á,
            ‡∏ô‡∏±‡∏Å‡∏Å‡∏µ‡∏¨‡∏≤: person.‡∏ô‡∏±‡∏Å‡∏Å‡∏µ‡∏¨‡∏≤,
            '‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏∑‡πà‡∏ô ‡πÜ': person['‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏∑‡πà‡∏ô ‡πÜ‡∞≤‡∞æ'],
            '‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®': person['‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∞≤‡∞æ'],
            '‡πÄ‡∏à‡πá‡∏ö (‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå)': person['‡πÄ‡∏à‡πá‡∏ö (‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå)‡∞≤‡∞æ'],
            ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: person.‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏,
          },
          reportInfo: {
            ‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô,
            '‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°': person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°‡∞≤‡∞æ'],
            ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà,
          },
          dynamicColumns: {
            '433_columns': person._433_columns || [],
            'admin_columns': person._admin_columns || [],
            '433_dates': person._433_dates || [],
            'admin_dates': person._admin_dates || [],
          }
        }
      })
      
      fetch('/api/profile-log', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      }).catch(() => {}) // Suppress errors for logging
    } catch (e) {
      console.error('‚ùå Error logging profile data:', e)
    }
  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏ô
  }, [fullName, position, person._433_dates, person._admin_dates, person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô, person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°'], person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, person._433_columns, person._admin_columns])

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Google Sheets ‡πÉ‡∏ô terminal
  console.log('=== ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ===')
  console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', person)
  console.log('433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1:', person['433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1'])
  console.log('433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2:', person['433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2'])
  console.log('433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 3:', person['433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 3'])
  console.log('433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 4:', person['433 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 4'])
  console.log('‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô:', person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô)
  console.log('‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°:', person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°'])
  console.log('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:', person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà)
  console.log('‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1:', person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1'])
  console.log('‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2:', person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2'])
  console.log('‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 3:', person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 3'])
  console.log('‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 4:', person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 4'])
  console.log('‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 5:', person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 5'])
  console.log('enter433 array:', person.enter433)
  console.log('reportHistory array:', person.reportHistory)
  console.log('enterChp array:', person.enterChp)
  console.log('===============================')

  // Clean and format enter433 data - ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (_433_dates)
  const formatEnter433 = (enter433: any[]) => {
    const dates: any[] = Array.isArray(person._433_dates) ? person._433_dates : []
    const entries: string[] = []
    dates.forEach((d, i) => {
      if (d && d.toString().trim()) entries.push(`‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${i + 1} ‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${d}`)
    })
    return entries.length ? entries.join('\n') : '-'
  }

  // Clean and format report history - ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const formatReportHistory = (reportHistory: any[]) => {
    if (person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô && person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°'] && person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà) {
      return `${person.‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô} ‡∏Ñ‡∏π‡πà ${person['‡∏ô.‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°']} ‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${person.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà}`
    }
    return '-'
  }

  // Clean and format enterChp - ‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö enter433 (_admin_dates)
  const formatEnterChp = (enterChp: any[]) => {
    const dates: any[] = Array.isArray(person._admin_dates) ? person._admin_dates : []
    const entries: string[] = []
    dates.forEach((d, i) => {
      if (d && d.toString().trim()) entries.push(`‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà ${i + 1} ‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${d}`)
    })
    return entries.length ? entries.join('\n') : '-'
  }

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤ 433 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ - ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (_433_dates)
  const calculate433Count = () => {
    const dates: any[] = Array.isArray(person._433_dates) ? person._433_dates : []
    return dates.filter(d => d && d.toString().trim()).length
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 text-white p-6">
      <div className="max-w-3xl mx-auto">
        {/* Header */}
        <div className="flex justify-start items-center mb-4 gap-2">
          <Button 
            onClick={onBack} 
            className="bg-yellow-400 text-black px-3 py-2 rounded-md shadow hover:bg-yellow-500"
          >
            <ArrowLeft className="h-4 w-4 mr-2" />
            ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
          </Button>
          <Button 
            onClick={handleRefresh} 
            className="bg-green-500 text-white p-2 rounded-full shadow hover:bg-green-600"
          >
            <RefreshCw className="h-4 w-4" />
          </Button>
        </div>

        <h2 className="text-3xl font-extrabold text-center tracking-tight mb-6">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h2>

        {/* Profile Card */}
        <div className="rounded-lg p-6 shadow-md border border-slate-700/20 bg-gradient-to-tr from-blue-800/20 via-slate-800/10 to-transparent">
          {/* Profile Picture and Name */}
          <div className="flex flex-col items-center mb-6">
            <AlertDialog>
              <AlertDialogTrigger asChild>
                <div className="w-48 h-48 rounded-full bg-gradient-to-br from-slate-700/60 to-slate-700/40 flex items-center justify-center overflow-hidden ring-4 ring-white/6 shadow-2xl cursor-pointer">
                  {avatarUrl ? (
                    <img 
                      src={avatarUrl} 
                      alt={fullName} 
                      className="w-full h-full object-cover" 
                    />
                  ) : (
                    <div className="text-slate-200 text-center">
                      <User className="h-16 w-16 mx-auto mb-2 opacity-50" />
                      <span className="text-sm">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</span>
                    </div>
                  )}
                </div>
              </AlertDialogTrigger>
              <AlertDialogContent>
                <AlertDialogHeader>
                  <AlertDialogTitle>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</AlertDialogTitle>
                  <AlertDialogDescription>
                    ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
                  </AlertDialogDescription>
                </AlertDialogHeader>
                <AlertDialogFooter>
                  <AlertDialogCancel>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</AlertDialogCancel>
                  <AlertDialogAction onClick={handleDownload}>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î</AlertDialogAction>
                </AlertDialogFooter>
              </AlertDialogContent>
            </AlertDialog>
            <div className="text-center mt-4">
              <div className="text-2xl font-semibold text-white">{displayName}</div>
              <div className="text-sm text-slate-300 mt-1">{position}</div>
            </div>
          </div>

          {/* Profile Details */}
          <div className="divide-y divide-slate-500/40 bg-transparent rounded-md overflow-hidden">
            {/* Basic Information */}
            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Award className="h-4 w-4 mr-2" />
                ‡∏•‡∏≥‡∏î‡∏±‡∏ö
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏•‡∏≥‡∏î‡∏±‡∏ö || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Calendar className="h-4 w-4 mr-2" />
                ‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <MapPin className="h-4 w-4 mr-2" />
                ‡∏ï‡∏≠‡∏ô
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏ï‡∏≠‡∏ô || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <MapPin className="h-4 w-4 mr-2" />
                ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Phone className="h-4 w-4 mr-2" />
                ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Star className="h-4 w-4 mr-2" />
                ‡∏Ñ‡∏±‡∏î‡πÄ‡∏Å‡∏£‡∏î
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏Ñ‡∏±‡∏î‡πÄ‡∏Å‡∏£‡∏î || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Award className="h-4 w-4 mr-2" />
                ‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏ù‡∏≠.
              </div>
              <div className="text-base font-medium text-white text-right">{person['‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ ‡∏ù‡∏≠.'] || person.‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£ || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <User className="h-4 w-4 mr-2" />
                ‡∏ï‡∏±‡∏ß‡∏ä‡∏ô
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏ï‡∏±‡∏ß‡∏ä‡∏ô || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <User className="h-4 w-4 mr-2" />
                ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Star className="h-4 w-4 mr-2" />
                ‡∏ô‡∏±‡∏Å‡∏Å‡∏µ‡∏¨‡∏≤
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏ô‡∏±‡∏Å‡∏Å‡∏µ‡∏¨‡∏≤ || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Calendar className="h-4 w-4 mr-2" />
                ‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
              </div>
              <div className="text-base font-medium text-white text-right">{person['‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏∑‡πà‡∏ô ‡πÜ'] || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <MapPin className="h-4 w-4 mr-2" />
                ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
              </div>
              <div className="text-base font-medium text-white text-right">{person['‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®'] || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <User className="h-4 w-4 mr-2" />
                ‡πÄ‡∏à‡πá‡∏ö (‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå)
              </div>
              <div className="text-base font-medium text-white text-right">{person['‡πÄ‡∏à‡πá‡∏ö (‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå)'] || '-'}</div >
            </div>

            <div className="grid grid-cols-2 items-center px-6 py-4">
              <div className="text-sm text-slate-300 flex items-center">
                <Calendar className="h-4 w-4 mr-2" />
                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
              </div>
              <div className="text-base font-medium text-white text-right">{person.‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ || '-'}</div >
            </div>





            {/* Report History */}
            <div className="grid grid-cols-2 items-start px-6 py-4">
              <div className="text-sm text-slate-300">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ñ‡∏ß‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>
              <div className="text-base font-medium text-white text-right whitespace-pre-line">
                {formatReportHistory(person.reportHistory)}
              </div>
            </div>

            {/* Dynamic 433 Columns */}
            {person._433_columns && person._433_columns.length > 0 && (
              <div className="grid grid-cols-2 items-start px-6 py-4">
                <div className="text-sm text-slate-300">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î 433</div>
                <div className="text-base font-medium text-white text-right">
                  {person._433_columns.map((col: any, index: number) => (
                    <div key={index} className="mb-1">
                      <span className="text-slate-400 text-xs">{col.column}:</span> {col.value || '-'}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Dynamic Admin Columns */}
            {person._admin_columns && person._admin_columns.length > 0 && (
              <div className="grid grid-cols-2 items-start px-6 py-4">
                <div className="text-sm text-slate-300">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£</div>
                <div className="text-base font-medium text-white text-right">
                  {person._admin_columns.map((col: any, index: number) => (
                    <div key={index} className="mb-1">
                      <span className="text-slate-400 text-xs">{col.column}:</span> {col.value || '-'}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Statistics */}
            <div className="grid grid-cols-2 items-center px-6 py-6">
              <div className="text-sm text-slate-300">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤433</div>
              <div className="text-lg font-semibold text-white text-right">
                <Badge variant="secondary" className="bg-orange-600 text-white">
                  {calculate433Count()}
                </Badge>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}